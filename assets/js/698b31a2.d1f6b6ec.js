"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6963],{5680:(e,n,r)=>{r.d(n,{xA:()=>c,yg:()=>m});var t=r(6540);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function p(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function o(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=t.createContext({}),l=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):p(p({},n),e)),r},c=function(e){var n=l(e.components);return t.createElement(s.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},y=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=l(r),y=a,m=u["".concat(s,".").concat(y)]||u[y]||d[y]||i;return r?t.createElement(m,p(p({ref:n},c),{},{components:r})):t.createElement(m,p({ref:n},c))}));function m(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=r.length,p=new Array(i);p[0]=y;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[u]="string"==typeof e?e:a,p[1]=o;for(var l=2;l<i;l++)p[l]=r[l];return t.createElement.apply(null,p)}return t.createElement.apply(null,r)}y.displayName="MDXCreateElement"},8255:(e,n,r)=>{r.r(n),r.d(n,{contentTitle:()=>p,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var t=r(8168),a=(r(6540),r(5680));const i={},p=void 0,o={unversionedId:"API/utils/dynamicSnapHelpers/functions/startSnapServer",id:"API/utils/dynamicSnapHelpers/functions/startSnapServer",isDocsHomePage:!1,title:"startSnapServer",description:"*",source:"@site/docs/API/utils/dynamicSnapHelpers/functions/startSnapServer.md",sourceDirName:"API/utils/dynamicSnapHelpers/functions",slug:"/API/utils/dynamicSnapHelpers/functions/startSnapServer",permalink:"/Snapper/API/utils/dynamicSnapHelpers/functions/startSnapServer",editUrl:"https://github.com/sayfer-io/Snapper/blob/main/docs/API/utils/dynamicSnapHelpers/functions/startSnapServer.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"startAndConnectToSnap",permalink:"/Snapper/API/utils/dynamicSnapHelpers/functions/startAndConnectToSnap"},next:{title:"verifyDirectoryExists",permalink:"/Snapper/API/utils/dynamicSnapHelpers/functions/verifyDirectoryExists"}},s=[{value:"Parameters",id:"parameters",children:[]},{value:"Returns",id:"returns",children:[]},{value:"Defined in",id:"defined-in",children:[]}],l={toc:s},c="wrapper";function u(e){let{components:n,...r}=e;return(0,a.yg)(c,(0,t.A)({},l,r,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("hr",null),(0,a.yg)("h1",{id:"function-startsnapserver"},"Function: startSnapServer()"),(0,a.yg)("blockquote",null,(0,a.yg)("p",{parentName:"blockquote"},(0,a.yg)("strong",{parentName:"p"},"startSnapServer"),"(",(0,a.yg)("inlineCode",{parentName:"p"},"snapDirectory"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"port"),"): ",(0,a.yg)("inlineCode",{parentName:"p"},"void"))),(0,a.yg)("p",null,"Starts the Snap server in the background."),(0,a.yg)("p",null,"This function uses the ",(0,a.yg)("inlineCode",{parentName:"p"},"runCommandDetached")," utility to start the Snap server\nin the background. The Snap server is started using the ",(0,a.yg)("inlineCode",{parentName:"p"},"npx mm-snap serve"),"\ncommand, with the specified port number and ",(0,a.yg)("inlineCode",{parentName:"p"},"--verboseErrors")," flag."),(0,a.yg)("h2",{id:"parameters"},"Parameters"),(0,a.yg)("p",null,"\u2022 ",(0,a.yg)("strong",{parentName:"p"},"snapDirectory"),": ",(0,a.yg)("inlineCode",{parentName:"p"},"string")),(0,a.yg)("p",null,"The directory where the Snap server should be started."),(0,a.yg)("p",null,"\u2022 ",(0,a.yg)("strong",{parentName:"p"},"port"),": ",(0,a.yg)("inlineCode",{parentName:"p"},"number")),(0,a.yg)("p",null,"The port number to use for the Snap server."),(0,a.yg)("h2",{id:"returns"},"Returns"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"void")),(0,a.yg)("h2",{id:"defined-in"},"Defined in"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://github.com/asifqatar/Snapper/blob/e47c50848996c5aee18aed9672ee3a5a1bb1ca7d/utils/dynamicSnapHelpers.ts#L63"},"utils/dynamicSnapHelpers.ts:63")))}u.isMDXComponent=!0}}]);